on:
  issue_comment:
    types: [created, edited, deleted]

name: Guestbook

jobs:
  update_guestbook:
    name: Update guestbook
    if: ${{ github.event.issue.title == 'Guestbook' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update guestbook from comments
        uses: actions/github-script@v7
        with:
          script: |
            const truncateString = (str, num) => str.length > num ? str.slice(0, num) + "..." : str;

            const query = `query($owner:String!, $name:String!, $issue_number:Int!) {
              repository(owner:$owner, name:$name){
                issue(number:$issue_number) {
                  comments(first:5, orderBy: {direction: DESC, field: UPDATED_AT}) {
                    nodes {
                      author {
                        avatarUrl(size: 24)
                        login
                        url
                      }
                      bodyText
                      updatedAt
                    }
                  }
                }
              }
            }`;

            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
              issue_number: context.issue.number
            };

            const result = await github.graphql(query, variables);
            console.log(result); // Log the result to inspect

            const renderComments = (comments) => {
              // Start the guestbook with <div align="center"> for centering
              let guestbookContent = "<div align='center'>\n\n";

              // Add the table header with proper formatting
              guestbookContent += "| Name | Date | Message |\n|---|---|---|\n";

              // If no comments exist, return an empty row
              if (!comments || comments.length === 0) {
                guestbookContent += "|  |  |  |\n";
                return guestbookContent;
              }

              // If comments exist, render them in the table
              const commentTable = comments.reduce((prev, curr) => {
                let text = curr.bodyText.replace(/(\r\n|\r|\n)/g, "<br />").replace('|', '&#124;'); // Handle newlines and special characters
                text = truncateString(text, 125); // Truncate the text to avoid overflowing content

                // Format the comment row like the header and append to table content
                return `${prev}\n| <a href="${curr.author.url}"><img width="24" src="${curr.author.avatarUrl}" alt="${curr.author.login}" /> ${curr.author.login}</a> | ${new Date(curr.updatedAt).toLocaleString()} | ${text} |\n`;
              }, "");

              guestbookContent += `${commentTable}`;
              return guestbookContent; // Only return the dynamic content (without the closing div)
            };

            const fileSystem = require('fs');
            const readme = fileSystem.readFileSync('README.md', 'utf8');
            const newReadme = readme.replace(/(?<=<!-- Guestbook -->.*\n)[\S\s]*?(?=<!-- \/Guestbook -->|$(?![\n]))/gm, renderComments(result.repository.issue.comments.nodes));
            fileSystem.writeFileSync('README.md', newReadme + '\n</div>\n', 'utf8'); // Closing </div> added here outside of guestbookContent

      # Stash uncommitted changes before pulling
      - name: Stash uncommitted changes
        run: |
          git config --global user.name 'Github Actions'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git stash || echo "No changes to stash"

      # Pull latest changes with rebase
      - name: Pull latest changes
        run: git pull origin main --rebase

      # Apply stashed changes (if any)
      - name: Apply stashed changes
        run: |
          git stash pop || echo "No changes to apply"

      - name: Commit and push guestbook update
        run: |
          git config --global user.name 'Github Actions'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -am ':sparkles: update guestbook' || echo "No changes to commit"
          git push origin main
